angular.module("nemo",[]).config(["inputProvider","validationProvider","utilsProvider",function(a,b,c){a.input("text",{template:'<input type="text" />'}).input("select",{template:'<select data-ng-options="option.value as option.text for option in model.options"></select>'}).input("hidden",{template:'<input type="hidden" />'}).input("password",{template:'<input type="password" />'}).input("email",{template:'<input type="text" />'}).input("checkbox",{template:'<input type="checkbox" />'}),b.validation("required",{validateFn:function(a,b,c,d){return b?!d.$isEmpty(a):!0}}).validation("inlist",{validateFn:function(a,b){return a?c.contains(b,a):!0}}).validation("pattern",{validateFn:function(a,b){return a?new RegExp(b).test(a):!0}}).validation("notpattern",{validateFn:function(a,b){return a?!new RegExp(b).test(a):!0}}).validation("mustnotcontain",{validateFn:function(a,b,c){var d=c.getFieldValue(b);return a&&d?a.indexOf(d)<0:!0}}).validation("mustmatch",{preCompileFn:function(a){a.attr("nemo-no-paste","true")},validateFn:function(a,b,c){var d=c.getFieldValue(b);return a?a===d:!0}}).validation("minlength",{validateFn:function(a,b){return a&&b?a.length>=b:!0}}).validation("maxlength",{validateFn:function(a,b){return a&&b?a.length<=b:!0}}).validation("email",{validateFn:function(a,b){return a&&b?new RegExp(/^[a-z0-9!#$%&'*+\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i).test(a):!0}}).validation("mustbeequal",{validateFn:function(a,b){return a||a===!1?a===b:!0}})}]),angular.module("nemo").provider("utils",[function(){function a(a){return a.charAt(0).toUpperCase()+a.slice(1)}function b(a,b){var c=!1;return a&&a.length&&angular.forEach(a,function(a){c=c||b===a}),c}return{capitalise:a,contains:b,$get:angular.noop}}]),angular.module("nemo").provider("input",["$compileProvider","utilsProvider",function(a,b){function c(a){var b,c;return b=document.createElement("div"),b.innerHTML=a,c=b.firstChild,c.setAttribute("ng-model","model.value"),c.setAttribute("name","{{model.name}}"),b.innerHTML}function d(a,b,c){return function(d,e,f,g){a.linkFn&&a.linkFn(d,e,f,g,b,c)}}function e(a,b,e){return{require:"^formHandler",template:c(a.template),replace:!0,restrict:"A",link:d(a,b,e)}}function f(c,d){return a.directive.apply(null,["input"+b.capitalise(c),["$compile","$http",function(a,b){return e(d,a,b)}]]),this}return{input:f,$get:angular.noop}}]),angular.module("nemo").provider("validation",["$compileProvider","utilsProvider",function(a,b){function c(a,b,c,d,e){b.$validators[a.code]=function(e,f){var g=d?d(f,a.value,c,b):!0;return g},e.set(a.code,a.message)}function d(a,b,d){return function(e,f,g,h){var i=e.$eval(g[a]),j=h[0],k=h[1];i.forEach(function(a){c(a,j,k,b,d)})}}function e(a,b,c){return{require:["ngModel","^formHandler"],restrict:"A",link:d(a,b,c)}}function f(c,d){g(c,d);var f="validation"+b.capitalise(c);return a.directive.apply(null,[f,["messages",function(a){return e(f,d.validateFn,a)}]]),this}function g(a,b){i[a]=b}function h(a){return i[a]}var i={};return{validation:f,$get:function(){return{getValidation:h}}}}]),angular.module("nemo").directive("formHandler",[function(){return{require:"form",controller:["$scope","$attrs",function(a,b){var c=this;this.getFieldValue=function(c){return a[b.name][c].$viewValue},this.forceValidity=function(c,d,e){a[b.name][c].$setValidity(d,e)},a.$evalAsync(function(){a[b.name].forceValidity=c.forceValidity})}]}}]),angular.module("nemo").directive("nemoInput",["$compile","validation",function(a,b){function c(a){return a.replace(/([A-Z])/g,function(a){return"-"+a.toLowerCase()})}function d(){return angular.element("<div></div>")}function e(a,b){b[0].setAttribute("input-"+c(a),"")}function f(a,d){var e,f,g;a&&a.length&&a.forEach(function(a,h){g=b.getValidation(a.type),g&&(e="validation-"+c(a.type),f="model.properties.validation["+h+"].rules",d.attr(e,f),angular.isFunction(g.preCompileFn)&&g.preCompileFn(d))})}function g(a,b){a.replaceWith(b)}function h(b,c){a(b)(c)}return{transclude:"element",restrict:"E",scope:{model:"="},link:function(a,b){var c=d();e(a.model.type,c),a.model.properties&&a.model.properties.validation&&f(a.model.properties.validation,c),g(b,c),h(c,a)}}}]),angular.module("nemo").directive("nemoNoPaste",[function(){return{link:function(a,b,c){a.$eval(c.nemoNoPaste)&&b.on("paste",function(a){a.preventDefault(),a.stopPropagation()})}}}]),angular.module("nemo").factory("messages",[function(){function a(a,b){c[a]=b}function b(a){return c[a]}var c={};return{set:a,get:b}}]),angular.module("nemo").directive("nemoValidationMessages",["messages",function(a){return{scope:{model:"="},template:'<div data-ng-if="model.$dirty && model.$invalid">{{getValidationMessage()}}</div>',link:function(b){b.getValidationMessage=function(){for(var c in b.model.$error)if(b.model.$error.hasOwnProperty(c))return a.get(c)}}}}]);